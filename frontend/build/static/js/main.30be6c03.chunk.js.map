{"version":3,"sources":["components/Navbar.js","components/SideDrawer.js","components/Backdrop.js","components/Product.js","redux/constants/productConstants.js","screens/HomeScreen.js","redux/action/productActions.js","redux/constants/cartConstants.js","redux/action/cartActions.js","screens/ProductScreen.js","components/CartItem.js","screens/CartScreen.js","App.js","reportWebVitals.js","redux/reducers/cartReducers.js","redux/store.js","redux/reducers/productReducers.js","index.js"],"names":["Navbar","click","cartItems","useSelector","state","cart","className","to","reduce","qty","item","Number","onClick","SideDrawer","show","sideDrawerClass","push","join","Backdrop","Product","imageUrl","name","price","description","productId","src","alt","substring","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addToCart","id","getState","countInStock","localStorage","setItem","JSON","stringify","cartItem","ProductScreen","match","history","useState","setQty","productDetails","getProductDetails","params","value","onChange","e","target","Array","keys","x","CartItem","qtyChangeHandler","removeHandler","CartScreen","removeFromCartHandler","removeFromCart","length","toFixed","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CART_INITIAL_STATE","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30be6c03.chunk.js","sourcesContent":["import \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navbar = ({ click }) => {\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar__logo\">\r\n                <h2>MERN Shopping Cart</h2>\r\n            </div>\r\n\r\n            <ul className=\"navbar__links\">\r\n                <li>\r\n                    <Link to=\"/cart\" className=\"cart__link\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart <span className=\"cartlogo__badge\">{getCartCount()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">Shop</Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"hamburger__menu\" onClick={click}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./SideDrawer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideDrawer = ({ show, click }) => {\r\n    const sideDrawerClass = [\"sidedrawer\"];\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n    };\r\n\r\n    if (show) {\r\n        sideDrawerClass.push(\"show\");\r\n    }\r\n\r\n    return (\r\n        <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer__links\" onClick={click}>\r\n                <li>\r\n                    <Link to=\"/cart\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart{\" \"}\r\n                            <span className=\"sidedrawer__cartbadge\">{getCartCount()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">Shop</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React from 'react';\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = ({ show, click }) => {\r\n    return (show &&\r\n        <div className=\"backdrop\" onClick={click}></div>\r\n    )\r\n};\r\nexport default Backdrop;","\r\nimport './Product.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = ({ imageUrl, name, price, description, productId }) => {\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={imageUrl} alt={name} />\r\n            <div className=\"product__info\">\r\n                <p className=\"info__name\">{name}</p>\r\n\r\n                <p className=\"info__description\">\r\n                    {description.substring(0, 100)}...</p>\r\n\r\n                <p className=\"info__price\">$ {price}</p>\r\n\r\n\r\n                <Link to={`/product/${productId}`} className=\"info__button\">\r\n                    View\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Product;","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import \"./HomeScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport Product from \"../components/Product\";\r\n\r\n//Actions\r\nimport { getProducts as listProducts } from \"../redux/action/productActions\";\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const getProducts = useSelector((state) => state.getProducts);\r\n    const { products, loading, error } = getProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen__title\">Latest Products</h2>\r\n            <div className=\"homescreen__products\">\r\n                {loading ? (\r\n                    <h2>Loading...</h2>\r\n                ) : error ? (\r\n                    <h2>{error}</h2>\r\n                ) : (\r\n                    products.map((product) => (\r\n                        <Product\r\n                            key={product._id}\r\n                            name={product.name}\r\n                            description={product.description}\r\n                            price={product.price}\r\n                            imageUrl={product.imageUrl}\r\n                            productId={product._id}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n        const { data } = await axios.get(\"/api/products\");\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => async (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    });\r\n};","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";","import * as actionTypes from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price: data.price,\r\n            countInStock: data.countInStock, qty,\r\n        },\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItem));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: id,\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItem));\r\n};","import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/action/productActions\";\r\nimport { addToCart } from \"../redux/action/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.getProductDetails);\r\n    const { product, loading, error } = productDetails;\r\n\r\n\r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id));\r\n        }\r\n    }, [dispatch, match, product]);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty));\r\n        history.push(`/cart`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"productscreen\">\r\n            {loading ? (\r\n                <h2>Loading...</h2>\r\n            ) : error ? (\r\n                <h2> {error} </h2>\r\n            ) : (\r\n                <>\r\n                    <div className=\"productscreen__left\">\r\n                        <div className=\"left__image\">\r\n                            <p>Product Details</p>\r\n                            <img src={product.imageUrl} alt={product.name} ></img>\r\n                        </div>\r\n                        <div className=\"left__info\">\r\n                            <p className=\"left__name\">{product.name}</p>\r\n                            <p>Price: ${product.price}</p>\r\n                            <p>Description: {product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"productscreen__right\">\r\n                        <div className=\"right__info\">\r\n                            <p>\r\n                                Price:\r\n                                <span>${product.price}</span>\r\n                            </p>\r\n                            <p>\r\n                                Status:\r\n                                <span>\r\n                                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                Qty\r\n                                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </p>\r\n                            <p>\r\n                                <button type=\"button\" onClick={addToCartHandler}>\r\n                                    Add To Cart\r\n                                </button>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeHandler }) => {\r\n    return (\r\n        <div className=\"cartitem\">\r\n            <div className=\"cartitem__image\">\r\n                <img src={item.imageUrl} alt={item.name} />\r\n            </div>\r\n\r\n            <Link to={`/product/${item.product}`} className=\" cartItem__name\">\r\n                <p>{item.name}</p>\r\n            </Link>\r\n\r\n            <p className=\"cartitem__price\">${item.price}</p>\r\n\r\n            <select\r\n                value={item.qty}\r\n                onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n                className=\"cartItem__select\"\r\n            >\r\n                {[...Array(item.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                        {x + 1}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            <button\r\n                className=\"cartItem__deleteBtn\"\r\n                onClick={() => removeHandler(item.product)}\r\n            >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\n","import \"./CartScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\n\r\n// Actions\r\nimport { addToCart, removeFromCart } from \"../redux/action/cartActions\";\r\n\r\nconst CartScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => { }, []);\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty));\r\n    };\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n    };\r\n\r\n    const getCartSubTotal = () => {\r\n        return cartItems\r\n            .reduce((price, item) => price + item.price * item.qty, 0)\r\n            .toFixed(2);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cartscreen\">\r\n                <div className=\"cartscreen__left\">\r\n                    <h2>Shopping Cart</h2>\r\n\r\n                    {cartItems.length === 0 ? (\r\n                        <div>\r\n                            Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n                        </div>\r\n                    ) : (\r\n                        cartItems.map((item) => (\r\n                            <CartItem\r\n                                key={item.product}\r\n                                item={item}\r\n                                qtyChangeHandler={qtyChangeHandler}\r\n                                removeHandler={removeFromCartHandler}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"cartscreen__right\">\r\n                    <div className=\"cartscreen__info\">\r\n                        <p>Subtotal ({getCartCount()}) items</p>\r\n                        <p>${getCartSubTotal()}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button>Proceed To Checkout</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./components/Navbar\";\nimport SideDrawer from \"./components/SideDrawer\";\nimport Backdrop from \"./components/Backdrop\";\n\n// Screens\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\n\nfunction App() {\n  const [sideToggle, setSideToggle] = useState(false);\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n      <main className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\n          <Route exact path=\"/cart\" component={CartScreen} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../constants/cartConstants\";\r\n\r\nconst CART_INITIAL_STATE = {\r\n    cartItems: [],\r\n};\r\n\r\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                };\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    getProductsReducer,\r\n    getProductsDetailReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductsDetailReducer\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\")\r\n    ? JSON.parse(localStorage.getItem(\"cart\"))\r\n    : [];\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartItemsInLocalStorage,\r\n    },\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            };\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                products: action.payload,\r\n                loading: false,\r\n            };\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProductsDetailReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n                // loading: false,\r\n                // product: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}